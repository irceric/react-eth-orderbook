{"version":3,"sources":["components/OrderRow.tsx","components/OrderTable.tsx","components/MarketDropdown.tsx","components/OrderAreaChart.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["OrderRow","volumes","price","highlight","total","formattedVolumes","Object","keys","map","exchangeName","index","className","scope","toFixed","OrderTable","orders","firstPrice","type","exchangesList","orderList","colSpan","MarketDropdown","onClick","onChange","event","currentTarget","value","aria-label","OrderAreaChart","market","roundIncrement","Math","round","data","bids","asks","min","slice","max","smoothedData","i","forEach","totalVol","roundedPx","bid","ask","push","sort","a","b","width","height","margin","top","right","left","bottom","id","x1","y1","x2","y2","offset","stopColor","stopOpacity","dataKey","allowDataOverflow","domain","strokeDasharray","verticalAlign","stroke","fillOpacity","fill","connectNulls","App","React","useState","setOrders","setMarket","useEffect","newSocketConnection","openSocket","query","on","handleClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.506d21b3.chunk.js","sourcesContent":["import React from \"react\";\n\ninterface OrderRowProps {\n  volumes: any,\n  price: string,\n  highlight: string\n}\n\nconst OrderRow = ({ volumes, price, highlight}: OrderRowProps): JSX.Element => {\n  let total = 0.0;\n  const exchanges = Object.keys(volumes);\n  const formattedVolumes = exchanges.map((exchangeName, index) => {\n    total += volumes[exchangeName] * 0.1;\n    return <td key={index}>{volumes[exchangeName]}</td>;\n  });\n\n  return (\n    <tr className={highlight}>\n      <th scope=\"row\">{price}</th>\n      {formattedVolumes}\n      <td>{total.toFixed(4)}</td>\n    </tr>\n  );\n};\n\nexport default OrderRow;\n","import React from \"react\";\nimport OrderRow from './OrderRow';\n\ninterface OrderBookProps {\n  orders: any | undefined,\n  type: 'bids' | 'asks'\n}\n\nconst OrderTable = ({ orders = {}, type = 'bids' }: OrderBookProps): JSX.Element => {\n  let firstPrice = orders && Object.keys(orders)[0];\n  if (!firstPrice) return <div>Empty</div>;\n  const exchangesList = orders && Object.keys(orders[firstPrice][\"volumes\"]).map((exchangeName, index) => {\n    return <th key={index} scope=\"col\">{exchangeName}</th>;\n  });\n\n  const orderList = orders && Object.keys(orders).map((price, index) => {\n    return <OrderRow key={index} price={price} volumes={orders[price][\"volumes\"]} highlight={orders[price][\"highlight\"]} />;\n  });\n\n  return (\n    <table className=\"table table-sm table-responsive-md\">\n      <thead>\n        <tr>\n          <th scope=\"col\" className=\"no-top-border\"></th>\n          <th className=\"text-center\" colSpan={12} scope=\"col\">Volume</th>\n        </tr>\n        <tr>\n          <th scope=\"col\">Price (BTC)</th>\n          {exchangesList}\n          <th scope=\"col\">Total</th>\n        </tr>\n      </thead>\n      <tbody>\n        {orderList}\n      </tbody>\n    </table>\n  );\n};\n\nexport default OrderTable;\n","import React from \"react\";\n\ninterface MarketDropdownProps {\n  onClick: (event: string) => void\n}\n\nconst MarketDropdown = ({ onClick }: MarketDropdownProps): JSX.Element => {\n  const handleChange = (event: React.FormEvent<HTMLSelectElement>) => {\n    onClick(event.currentTarget.value);\n  };\n\n  return (\n    <form >\n      <label> Select Market: </label><br></br>\n      <select className=\"btn btn-light btn-lg\" onChange={handleChange} aria-label=\"select market dropdown\">\n        <option value=\"ETH\">BTC-ETH</option>\n        <option value=\"DOGE\">BTC-DOGE</option>\n      </select>\n    </form>\n  );\n};\n\nexport default MarketDropdown;\n","import React from \"react\";\nimport { AreaChart, XAxis, YAxis, CartesianGrid, Tooltip, Area, Legend } from 'recharts';\n\ninterface OrderAreaProps {\n  orders: any,\n  market: string,\n}\n\nconst OrderAreaChart = ({ orders, market }: OrderAreaProps): JSX.Element => {\n\n  const roundIncrement = (price: number): number => {\n    return + (Math.round(price * 2000) / 2000).toFixed(4);\n  };\n\n  let data: any[] = [];\n\n  if (orders[0] && market === 'ETH') {\n    let bids = orders[0];\n    let asks = orders[1];\n    let min = + roundIncrement(+Object.keys(bids).slice(-1)[0]);\n    let max = + Object.keys(asks).slice(-1)[0];\n    let smoothedData: {\n      [key: string]: any\n    } = {};\n\n    let i = min;\n    while (i <= max + .0005) {\n      smoothedData[roundIncrement(i)] = { 'bid': 0, 'ask': 0 };\n      i = +roundIncrement(i) + .0005;\n    }\n    Object.keys(bids).forEach((price) => {\n      let totalVol = 0;\n      let roundedPx = roundIncrement(+price);\n      Object.keys(bids[price].volumes).forEach((exchangeName) => {\n        totalVol += bids[price].volumes[exchangeName];\n      });\n      smoothedData[roundedPx]['bid'] += totalVol;\n    });\n\n    Object.keys(asks).forEach((price) => {\n      let totalVol = 0;\n      let roundedPx = roundIncrement(+price);\n      Object.keys(asks[price].volumes).forEach((exchangeName) => {\n        totalVol += asks[price].volumes[exchangeName];\n      });\n      smoothedData[roundedPx]['ask'] += totalVol;\n    });\n\n    data = Object.keys(smoothedData).map(function (price) {\n      return { price: +price, bid: smoothedData[price]['bid'], ask: smoothedData[price]['ask'] };\n    });\n  } else {\n    if (orders[0]) {\n      let bids = orders[0];\n      Object.keys(bids).forEach(function (price) {\n        let totalVol = 0;\n        Object.keys(bids[price].volumes).forEach((exchangeName) => {\n          totalVol += bids[price].volumes[exchangeName];\n        });\n        data.push({ price: + price, bid: totalVol });\n      });\n\n      let asks = orders[1];\n      Object.keys(asks).forEach(function (price) {\n        let totalVol = 0;\n        Object.keys(asks[price].volumes).forEach((exchangeName) => {\n          totalVol += asks[price].volumes[exchangeName];\n        });\n        data.push({ price: + price, ask: totalVol });\n      });\n\n\n      data.sort(function (a, b) {\n        return a.price - b.price;\n      });\n    }\n  }\n\n  return (\n\n    <AreaChart width={1000} height={250} data={data}\n      margin={{ top: 10, right: 30, left: 0, bottom: 0 }}>\n      <defs>\n        <linearGradient id=\"colorUv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n          <stop offset=\"5%\" stopColor=\"#F4442E\" stopOpacity={0.8} />\n          <stop offset=\"95%\" stopColor=\"#F4442E\" stopOpacity={0.5} />\n        </linearGradient>\n        <linearGradient id=\"colorPv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n          <stop offset=\"5%\" stopColor=\"#99F7AB\" stopOpacity={0.8} />\n          <stop offset=\"95%\" stopColor=\"#99F7AB\" stopOpacity={.5} />\n        </linearGradient>\n      </defs>\n      <XAxis dataKey=\"price\" type=\"number\" allowDataOverflow={true} domain={['dataMin', 'dataMax']} />\n      <YAxis allowDataOverflow={true} />\n      <CartesianGrid strokeDasharray=\"3 3\" />\n      <Tooltip />\n      <Legend verticalAlign=\"top\" height={36} />\n      <Area type=\"monotone\" dataKey=\"bid\" stroke=\"#F4442E\" fillOpacity={1} fill=\"url(#colorUv)\" connectNulls={true} />\n      <Area type=\"monotone\" dataKey=\"ask\" stroke=\"#99F7AB\" fillOpacity={1} fill=\"url(#colorPv)\" connectNulls={true} />\n    </AreaChart>\n  );\n};\n\nexport default OrderAreaChart;\n","import React from 'react';\nimport openSocket from \"socket.io-client\";\n\nimport OrderTable from './components/OrderTable';\nimport MarketDropdown from './components/MarketDropdown';\nimport OrderAreaChart from './components/OrderAreaChart';\n\nimport './App.css';\n\nconst endpoint = \"http://localhost:8080\";\n\nfunction App() {\n  const [orders, setOrders] = React.useState<any>({});\n  const [market, setMarket] = React.useState<string>(\"ETH\");\n\n  React.useEffect(() => {\n    newSocketConnection(\"ETH\");\n  }, []);\n\n  const handleClick = (market:string) => {\n    newSocketConnection(market);\n    setMarket(market);\n  };\n\t\n  const newSocketConnection = (market:string) => {\n    const socket = openSocket(endpoint, {query:`market=${market}`});\n    socket.on(\"orders\", (data: any) =>{\n      setOrders(data);\n    } );\n  };\n\n  const renderMarketDropdown = () =>{\n    return (\n      <MarketDropdown\n        onClick={(market: string) => handleClick(market)}\n      />\n    );\n  };\n\t\n  return (\n    <div className=\"container-fluid text-center\">\n      <br></br>\n      <h3>Order Book Test Project</h3><br></br>\n      <h4 className=\"blue-text\">BTC-{market} Market</h4><br></br>\n      <h5>{renderMarketDropdown()}</h5>\n      <div className=\"col-md-10 offset-md-1 text-center\">\n        <OrderAreaChart orders={orders} market={market} />\n      </div>\n      <div className=\"col-md-6 offset-md-3\"><br></br><br></br>\n        <h5 className= \"text-center font-italic bg-warning\">Highlighting Represents Overlapping Asks/Bids</h5><br></br>\n      </div>\n      <div className=\"row\">\n        <div className=\"col-md-6\">\n          <h3 className = \"text-center\">Bids</h3>\n          <OrderTable type=\"bids\" orders={orders[0]}/>\n        </div>\n        <div className=\"col-md-6\">\n          <h3 className = \"text-center\">Asks</h3>\n          <OrderTable type=\"asks\" orders={orders[1]}/>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}